name: Release
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        # platform: [macos-latest, ubuntu-20.04, windows-latest]
        platform: [macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # - name: Install dependencies (ubuntu only)
      #   if: matrix.platform == 'ubuntu-20.04'
      #   # You can remove libayatana-appindicator3-dev if you don't use the system tray feature.
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev

      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - uses: pnpm/action-setup@v2
        with:
          version: 7.28.0

      - name: Sync node version and setup cache
        uses: actions/setup-node@v3.6.0
        with:
          node-version: "lts/*"
          cache: "pnpm" # Set this to npm, yarn or pnpm.

      - name: Install app dependencies and build web
        # Remove `&& yarn build` if you build your frontend in `beforeBuildCommand`
        run: pnpm install # Change this to npm, yarn or pnpm.

      - name: Build the app
        uses: tauri-apps/tauri-action@v0

      - name: Upload Web Assets to COS
        uses: zkqiang/tencent-cos-action@v0.1.0
        with:
          args: upload -r ./dist/ /tools/notebook
          secret_id: ${{ secrets.COS_SECRET_ID }}
          secret_key: ${{ secrets.COS_SECRET_KEY }}
          bucket: ${{ secrets.COS_BUCKET }}
          region: ap-hongkong


      - name: Upload Installer to COS
        uses: zkqiang/tencent-cos-action@v0.1.0
        with:
          args: upload -r ./src-tauri/dist/ /tools/notebook/releases/
          secret_id: ${{ secrets.COS_SECRET_ID }}
          secret_key: ${{ secrets.COS_SECRET_KEY }}
          bucket: ${{ secrets.COS_BUCKET }}
          region: ap-hongkong

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

        with:
          tagName: ${{ github.ref_name }} # This only works if your workflow triggers on new tags.
          releaseName: "App Name v__VERSION__" # tauri-action replaces \_\_VERSION\_\_ with the app version.
          releaseBody: "See the assets to download and install this version."
          releaseDraft: true
          prerelease: false
